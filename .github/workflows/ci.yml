name: CI

on:
  push:
    branches:
      # Consider the Docker build push condition if changing this
      - 'main'
      - 'SC-559/DockerTransfer'  #delete
  pull_request:
    branches:
      - "**"

env:
  MAJOR_VERSION: 9
  BASE_IMAGE_NAME: epcpower/c2prog:latest
  URL: https://software-dl.ti.com/ccs/esd/CCSv9/CCS_9_2_0/exports/CCS9.2.0.00013_linux-x64.tar.gz
  TARPATH: cache/ccs.tar.gz
  TARNAME: ccs.tar.gz
  INSTALL_IUS: com.ti.cgt.c2000.18.linux.feature.group/18.12.3 com.ti.cgt.c2000.19.linux.feature.group/20.2.5
  UNINSTALL_IUS: ""

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: twisted/python-info-action@v1

      - name: Define variables
        id: variables
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          python .github/set_variables.py

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download CCStudio archive
        run: |
          if ! [ -f "$TARPATH" ]; then
            mkdir -p $(dirname "$TARPATH");
            curl --location "$URL" > "$TARPATH";
          fi
          ls -l "$TARPATH"

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          build-args: |
            FROM=${{ env.BASE_IMAGE_NAME }}
            INSTALL_IUS=${{ env.INSTALL_IUS }}
            UNINSTALL_IUS=${{ env.UNINSTALL_IUS }}
          context: .
          load: true
          tags: ${{ fromJSON(steps.variables.outputs.name_and_tag) }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Test
        run: |
          docker run --pull never --interactive --rm ${{ fromJSON(steps.variables.outputs.name_and_tag) }} -noSplash -data /workspace -application com.ti.ccstudio.apps.projectImport -ccs.help | tee run.log
          grep --ignore-case --quiet 'usage' run.log

      - name: Report size
        run: |
          mkdir report_size
          cd report_size
          docker save ${{ fromJSON(steps.variables.outputs.name_and_tag) }} | gzip | wc --bytes

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{ fromJSON(steps.variables.outputs.publish_image) }}
        with:
          username: ${{ fromJSON(steps.variables.outputs.dockerhub_username) }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Push
        if: ${{ fromJSON(steps.variables.outputs.publish_image) }}
        run: |
          docker push ${{ fromJSON(steps.variables.outputs.name_and_tag) }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v2
        if: ${{ fromJSON(steps.variables.outputs.publish_readme) }}
        with:
          readme-filepath: README.rst
          username: ${{ fromJSON(steps.variables.outputs.dockerhub_username) }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ fromJSON(steps.variables.outputs.name) }}
